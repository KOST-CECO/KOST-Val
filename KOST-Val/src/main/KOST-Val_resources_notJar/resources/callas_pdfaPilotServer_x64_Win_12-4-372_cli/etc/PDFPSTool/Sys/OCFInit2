%!PS-Adobe-3.0 Resource-File
%%BeginResource: file (Sys/OCFInit2)
%%Title: (Sys/OCFInit2)
%%Version: 3010.01
%%Copyright: ------------------------------------------------------------
%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated.
%%Copyright: All rights reserved.
%%Copyright:
%%Copyright: Patents Pending
%%Copyright:
%%Copyright: NOTICE: All information contained herein is the property
%%Copyright: of Adobe Systems Incorporated. Many of the intellectual
%%Copyright: and technical concepts contained herein are proprietary
%%Copyright: to Adobe, are protected as trade secrets, and are made
%%Copyright: available only to Adobe licensees for their internal use.
%%Copyright: Any reproduction or dissemination of this software is
%%Copyright: strictly forbidden unless prior written permission is
%%Copyright: obtained from Adobe.
%%Copyright:
%%Copyright: PostScript and Display PostScript are trademarks of
%%Copyright: Adobe Systems Incorporated which may be registered in
%%Copyright: certain jurisdictions.
%%Copyright: ------------------------------------------------------------
%%EndComments
systemdict/currentpacking known{currentpacking true setpacking}if systemdict
/currentglobal known{currentglobal false setglobal}if 1183615869 internaldict
dup begin/eCCRun known not{/eCCRun{{//systemdict/internaldict get 1183615869
exch exec/$strop2 get 907181848 exch exec}stopped{pop/BuildChar errordict
/invalidfont get exec stop}if 1183615869 internaldict/CCRun get exec}bind
executeonly def}if end systemdict/monitor known{currentglobal true setglobal
systemdict/globaldict get}{1183615869 internaldict}ifelse begin/$DiskPGFont 32
dict def $DiskPGFont begin 1183615869 internaldict/compBuildChar known{
/BuildChar 1183615869 internaldict/compBuildChar get def}{/BuildChar{userdict
/$UDPGFont known not{userdict/$UDPGFont 22 dict dup/CurName()put dup/CurFile 0
put dup/CurOpen false put dup/NameBuffer 64 string put dup/DataBuffer 500
string put dup/c 0 put dup/fd 0 put dup/cn 0 put dup/co 0 put dup/pf 0 put dup
/pd 0 put dup/po1 0 put dup/po2 0 put dup/pl 0 put dup/tn 0 put dup/ri 0 put
put}if userdict/$UDPGFont get begin/c exch def/fd exch def/cn fd/Encoding get
c get def fd/CharStrings get dup cn known{cn get}{/.notdef get}ifelse dup
xcheck{//systemdict begin fd begin c exch exec end end}{/co exch fd
/CharOffsets get exch 6 mul 6 getinterval def/pf co 0 get fd/PGFArray get exch
get dup type/dicttype ne{findpgfont}if def/po1 co 1 get def/po2 co 2 get 8
bitshift co 3 get add def/pl co 4 get 8 bitshift co 5 get add def fd c pf
/CharStringsArray get dup type/stringtype eq{/CurOpen CurFile type/filetype ne
{false}{CurFile status}ifelse def CurName ne CurOpen not or{CurOpen{CurFile
closefile}if pf/CharStringsArray get length dup NameBuffer length gt{string
/NameBuffer exch def}{pop}ifelse/CurName pf/CharStringsArray get NameBuffer
copy def/CurFile CurName(r)file def}if CurFile po1 16 bitshift po2 add
setfileposition pl DataBuffer length gt{/DataBuffer pl 1.1 mul cvi string def}
if CurFile DataBuffer 0 pl getinterval readstring pop}{po1 get po2 pl
getinterval}ifelse cvx/pd fd/Private get def fd/Private pf/Private get{dup
/RunInt get/ri exch def put}//systemdict/internaldict get 1183615869 exch exec
/superexec get exec ri/CCRun eq ri/BMRun eq or ri/eCCRun eq or{//systemdict
/internaldict get 1183615869 exch exec ri get exec}{ri load exec}ifelse fd
/Private pd{put}//systemdict/internaldict get 1183615869 exch exec/superexec
get exec}ifelse end}bind executeonly def}ifelse/MDID 0 def/MDFV[]def/MDFS 1536
string def/MDFF{FontDirectory 4 index known dup{pop 3 index findfont/Private
get{/UniqueID get}//systemdict/internaldict get 1183615869 exch exec/superexec
get exec 3 index eq}executeonly if{//$DiskPGFont/MDFS get exch 0 exch
getinterval currentfile exch readstring pop pop pop pop findfont}executeonly{
15 dict begin string currentfile exch readstring pop/CharOffsets exch readonly
def//$DiskPGFont/MDFV get exch get dup 0 get/Encoding exch findencoding def
dup 1 get/CharStrings exch findcharstrings def dup 2 get/FontBBox exch
readonly def dup 3 get/PGFArray exch readonly def dup 4 get/FontMatrix exch
readonly def 5 get dup null eq{pop}{/CDevProc exch findcdevproc def}ifelse dup
true eq{pop//$DiskPGFont/MDID 2 copy get dup null eq{pop pop pop null}{dup 1
add exch 4 1 roll put}ifelse}if dup null ne{/UniqueID 1 index def}if exch
/FontName exch def/FontType 4 def/PaintType 0 def/BuildChar//$DiskPGFont
/BuildChar get def/Private 2 dict dup begin/password 5839 def/UniqueID 4 -1
roll dup false eq{pop null}if def end noaccess def currentdict end dup
/FontName get exch definefont}executeonly ifelse}bind executeonly def
systemdict/monitor known{setglobal}if end end systemdict/currentpacking known{
setpacking}if systemdict/currentglobal known{setglobal}if systemdict
currentdict eq{end}if currentfile closefile
%%EndResource
%%EOF

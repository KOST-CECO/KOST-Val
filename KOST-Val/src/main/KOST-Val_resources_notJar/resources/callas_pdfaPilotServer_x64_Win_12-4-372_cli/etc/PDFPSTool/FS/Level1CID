%!PS-Adobe-3.0 Resource-File
%%BeginResource: file (FS/Level1CID)
%%Title: (FS/Level1CID)
%%Version: 3010.01
%%Copyright: ------------------------------------------------------------
%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated.
%%Copyright: All rights reserved.
%%Copyright:
%%Copyright: Patents Pending
%%Copyright:
%%Copyright: NOTICE: All information contained herein is the property
%%Copyright: of Adobe Systems Incorporated. Many of the intellectual
%%Copyright: and technical concepts contained herein are proprietary
%%Copyright: to Adobe, are protected as trade secrets, and are made
%%Copyright: available only to Adobe licensees for their internal use.
%%Copyright: Any reproduction or dissemination of this software is
%%Copyright: strictly forbidden unless prior written permission is
%%Copyright: obtained from Adobe.
%%Copyright:
%%Copyright: PostScript and Display PostScript are trademarks of
%%Copyright: Adobe Systems Incorporated which may be registered in
%%Copyright: certain jurisdictions.
%%Copyright: ------------------------------------------------------------
%%EndComments
userdict/CDevProcDirectory known not{userdict begin/CDevProcDirectory 32 dict
def CDevProcDirectory/StandardCDevProc 1183615869 internaldict dup/stdCDevProc
known{/stdCDevProc get}{pop{pop pop pop pop 0 exch -1000 exch 2 div 880}bind}
ifelse put/findcdevproc{dup userdict/CDevProcDirectory get exch known not{
(cdevprocs/)AppendName PrependRoot run}if userdict/CDevProcDirectory get exch
get}bind executeonly def end}if userdict/CIDFontDirectory known not{userdict
begin/CIDFontDirectory 200 dict def/findcidfont{pop dup dup//userdict
/CIDFontDirectory get exch known dup{//userdict/CIDFontDirectory get 2 index
get null ne and}if not{cid_extensions/cid_streamedCIDFont false put{(CIDFont/)
AppendName PrependRoot run pop}stopped cid_extensions/cid_streamedCIDFont true
put{(CIDFont findresource)errordict/invalidfont get exec}if}if//userdict
/CIDFontDirectory get exch get}bind executeonly def end}if userdict
/CMapDirectory known not{userdict begin/CMapDirectory 200 dict def/findcmap{
pop dup dup//userdict/CMapDirectory get exch known dup{//userdict
/CMapDirectory get 2 index get null ne and}if not{dup(CMap/)AppendName
PrependRoot run pop}if//userdict/CMapDirectory get exch get}bind executeonly
def end}if userdict/ProcSetDirectory known not{userdict begin/ProcSetDirectory
32 dict def/findprocset{pop dup dup//userdict/ProcSetDirectory get exch known
not{(ProcSet/)AppendName PrependRoot run}if//userdict/ProcSetDirectory get
exch get}bind executeonly def end}if userdict/FixCIDInitProcSetDirectory known
not{userdict begin/FixCIDInitProcSetDirectory 32 dict def
/findfixcidinitprocset{pop dup dup//userdict/FixCIDInitProcSetDirectory get
exch known not{(FixCIDInitProcSet/)AppendName PrependRoot run}if//userdict
/FixCIDInitProcSetDirectory get exch get}bind executeonly def end}if userdict
/FixCMapCategoryDirectory known not{userdict begin/FixCMapCategoryDirectory 32
dict def/findfixcmapcategory{pop dup dup//userdict/FixCMapCategoryDirectory
get exch known not{(FixCMapCategory/)AppendName PrependRoot run}if//userdict
/FixCMapCategoryDirectory get exch get}bind executeonly def end}if userdict
/CompatibleCIDFontDirectory known not{userdict begin
/CompatibleCIDFontDirectory 32 dict def/findcompatiblecidfont{pop dup dup
//userdict/CompatibleCIDFontDirectory get exch known not{(CompatibleCIDFont/)
AppendName PrependRoot run}if//userdict/CompatibleCIDFontDirectory get exch
get}bind executeonly def end}if userdict/CompatibleFontDirectory known not{
userdict begin/CompatibleFontDirectory 32 dict def/findcompatiblefont{pop dup
dup//userdict/CompatibleFontDirectory get exch known not{/CompatibleFont mark
mark mark mark mark 6 index(CompatibleFont/)AppendName PrependRoot{run}stopped
pop{/CompatibleFont lib_extensions begin lib_ClearToNamedMark end}stopped pop
//userdict/CompatibleFontDirectory get 1 index 2 copy known{get dup type
/dicttype eq{dup/FontName known{/FontName get 1 index eq}{pop false}ifelse}{
pop false}ifelse}{pop pop false}ifelse not{FontDirectory 1 index 2 copy known{
get 1 index exch}{pop pop dup/Courier findfont}ifelse/CompatibleFont
defineresource pop}if}if//userdict/CompatibleFontDirectory get exch get}bind
executeonly def end}if userdict begin/cid_l1findfont{pop dup dup FontDirectory
exch known{FontDirectory exch get}{cid_extensions begin cid_IsComposedFont end
{/CIDInit/ProcSet lib_extensions/lib_findresource get exec begin
lib_extensions begin false lib_vmSaveState end 1 index/FDepVector-C
cid_FindFixEntry{0 exch exec}{cid_composefont}ifelse lib_extensions begin
lib_vmRestoreState end end}{dup lib_extensions begin/lib_dstr1(fonts/)
lib_Strcpy exch lib_Strcat lib_Strget end//status{pop pop pop pop//findfont
exec}{dup/CompatibleFont resourcestatus{pop pop/CompatibleFont findresource}{
//findfont exec}ifelse}ifelse}ifelse}ifelse}bind def/findfont{/Font
findresource}bind def end/defineresource{exch dup 4 1 roll exch{dup/Encoding
eq{//EncodingDirectory exit}if dup/Charstring eq{//CharStringsDirectory exit}
if dup/CDevProc eq{//CDevProcDirectory exit}if dup/PGFont eq{//PGFontDirectory
exit}if dup/Font eq{//FontDirectory exit}if dup/CMap eq{//CMapDirectory exit}
if dup/CIDFont eq{//CIDFontDirectory exit}if dup/ProcSet eq{//ProcSetDirectory
exit}if dup/FixCIDInitProcSet eq{//FixCIDInitProcSetDirectory exit}if dup
/FixCMapCategory eq{//FixCMapCategoryDirectory exit}if dup/CompatibleFont eq{
//CompatibleFontDirectory exit}if dup/CompatibleCIDFont eq{
//CompatibleCIDFontDirectory exit}if(
%%[ Error: resource type unknown: )print == flush pop stop}loop exch pop 3 1
roll put}bind executeonly userdict 3 1 roll put lib_extensions/defineresource
//defineresource put/undefineresource{null exch lib_extensions/defineresource
get exec pop}bind executeonly userdict 3 1 roll put/findresource{{dup/Encoding
eq{findencoding exit}if dup/Charstring eq{findcharstrings exit}if dup/CDevProc
eq{findcdevproc exit}if dup/Font eq{cid_l1findfont exit}if dup/PGFont eq{
findpgfont exit}if dup/CIDFont eq{findcidfont exit}if dup/CMap eq{findcmap
exit}if dup/ProcSet eq{findprocset exit}if dup/FixCIDInitProcSet eq{
findfixcidinitprocset exit}if dup/FixCMapCategory eq{findfixcmapcategory exit}
if dup/CompatibleFont eq{findcompatiblefont exit}if dup/CompatibleCIDFont eq{
findcompatiblecidfont exit}if(
%%[ Error: undefined resource: )print 32 string cvs print( ]%%
)print flush stop}loop exch pop}bind executeonly userdict 3 1 roll put
lib_extensions/lib_findresource//findresource put/resourceforall{{dup/Font eq{
(fonts/)exit}if dup/FSupp eq{(fsupp/)exit}if dup/PGFSupp eq{(pgfsupp/)exit}if
dup/PGFont eq{(pgfonts/)exit}if dup/Sys eq{(Sys/)exit}if dup/Usr eq{(Usr/)exit
}if dup/Encoding eq{(encodings/)exit}if dup/Charstring eq{(charstrings/)exit}
if dup/CMap eq{(CMap/)exit}if dup/CIDFont eq{(CIDFont/)exit}if dup/ProcSet eq{
(ProcSet/)exit}if dup/FixCIDInitProcSet eq{(FixCIDInitProcSet/)exit}if dup
/FixCMapCategory eq{(FixCMapCategory/)exit}if dup/CompatibleFont eq{
(CompatibleFont/)exit}if dup/CompatibleCIDFont eq{(CompatibleCIDFont/)exit}if
(
%%[ Error: undefined resource )print 32 string cvs print( ]%%
)print flush stop}loop PrependRoot exch pop 4 -1 roll 1 index AppendName exch
pop exch 4 1 roll mark 3 1 roll{counttomark 2 add index anchorsearch{pop dup
length string copy}{pop}ifelse}3 2 roll userdict/filenameforall get exec
counttomark array astore exch pop 3 -2 roll exch pop forall}bind executeonly
userdict 3 1 roll put/resourcestatus{{dup/CIDFont eq{pop userdict
/CIDFontDirectory get 1 index known{pop 1 -1 true}{/CIDFont cid_getresfilename
status{pop pop exch pop 2 exch true}{false}ifelse}ifelse exit}if dup/CMap eq{
pop userdict/CMapDirectory get 1 index known{pop 1 -1 true}{/CMap
cid_getresfilename status{pop pop exch pop 2 exch true}{false}ifelse}ifelse
exit}if dup/ProcSet eq{pop dup/CIDInit eq{/AdobeTypeComposer/ProcSet
resourcestatus{pop pop pop false false}{true}ifelse}{true}ifelse{userdict
/ProcSetDirectory get 1 index known{pop 1 -1 true}{/ProcSet cid_getresfilename
status{pop pop exch pop 2 exch true}{false}ifelse}ifelse}if exit}if dup
/FixCIDInitProcSet eq{pop userdict/FixCIDInitProcSetDirectory get 1 index
known{pop 1 -1 true}{/FixCIDInitProcSet cid_getresfilename status{pop pop exch
pop 2 exch true}{false}ifelse}ifelse exit}if dup/FixCMapCategory eq{pop
userdict/FixCMapCategoryDirectory get 1 index known{pop 1 -1 true}{
/FixCMapCategory cid_getresfilename status{pop pop exch pop 2 exch true}{false
}ifelse}ifelse exit}if dup/CompatibleFont eq{pop userdict
/CompatibleFontDirectory get 1 index known{pop 1 -1 true}{/CompatibleFont
cid_getresfilename status{pop pop exch pop 2 exch true}{false}ifelse}ifelse
exit}if dup/CompatibleCIDFont eq{pop userdict/CompatibleCIDFontDirectory get 1
index known{pop 1 -1 true}{/CompatibleCIDFont cid_getresfilename status{pop
pop exch pop 2 exch true}{false}ifelse}ifelse exit}if dup/Font eq{pop
systemdict/FontDirectory get 1 index known{pop 1 -1 true}{/CIDInit/ProcSet
lib_extensions/lib_findresource get exec begin cid_extensions begin
cid_IsComposedFont{pop pop pop 2 -1 true}{dup lib_extensions begin/lib_dstr1
(fonts/)lib_Strcpy exch lib_Strcat lib_Strget end//status{pop pop pop pop pop
2 -1 true}{/CompatibleFont resourcestatus}ifelse}ifelse end end}ifelse exit}if
(
%%[ Error: undefined resource: )print 32 string cvs print( ]%%
)print flush stop}loop}bind executeonly userdict 3 1 roll put/cid_execresfile{
{dup/FSupp eq{(fsupp/)exit}if dup/Font eq{(fonts/)exit}if dup/PGFSupp eq{
(pgfsupp/)exit}if dup/PGFont eq{(pgfonts/)exit}if dup/Sys eq{(Sys/)exit}if dup
/Usr eq{(Usr/)exit}if dup/Charstring eq{(charstrings/)exit}if dup/Encoding eq{
(encodings/)exit}if dup/CIDFont eq{(CIDFont/)exit}if dup/CMap eq{(CMap/)exit}
if dup/ProcSet eq{(ProcSet/)exit}if dup/FixCIDInitProcSet eq{
(FixCIDInitProcSet/)exit}if dup/FixCMapCategory eq{(FixCMapCategory/)exit}if
dup/CompatibleFont eq{(CompatibleFont/)exit}if dup/CompatibleCIDFont eq{
(CompatibleCIDFont/)exit}if(
%%[ Error: undefined resource )print 32 string cvs print( ]%%
)print flush stop}loop exch pop AppendName exch pop PrependRoot{run}1183615869
//internaldict/superexec get exec}bind executeonly userdict 3 1 roll put
userdict/execresfile//cid_execresfile put/cid_getresfilename{{dup/FSupp eq{
(fsupp/)exit}if dup/Font eq{(fonts/)exit}if dup/Sys eq{(Sys/)exit}if dup
/PGFont eq{(pgfonts/)exit}if dup/PGFSupp eq{(pgfsupp/)exit}if dup/Charstring
eq{(charstrings/)exit}if dup/Encoding eq{(encodings/)exit}if dup/CIDFont eq{
(CIDFont/)exit}if dup/CMap eq{(CMap/)exit}if dup/ProcSet eq{(ProcSet/)exit}if
dup/FixCIDInitProcSet eq{(FixCIDInitProcSet/)exit}if dup/FixCMapCategory eq{
(FixCMapCategory/)exit}if dup/CompatibleFont eq{(CompatibleFont/)exit}if dup
/CompatibleCIDFont eq{(CompatibleCIDFont/)exit}if
(
%%[ Error: undefined resource )print 32 string cvs print( ]%%
)print flush stop}loop exch pop AppendName exch pop PrependRoot}bind
executeonly userdict 3 1 roll put userdict/getresfilename//cid_getresfilename
put
%%EndResource
%%EOF
